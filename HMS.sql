create database HMS;
CREATE TABLE DOCTORS(
ID INT IDENTITY(1,1) NOT NULL,
DOC_ID AS('DID'+RIGHT('-000000'+CAST(ID AS VARCHAR(7)),7))PERSISTED,
DOC_NAME VARCHAR(50) NOT NULL,
DOC_DEP_ID int  NOT NULL foreign key references Department(ID),
DOC_TEL VARCHAR(15) NOT NULL UNIQUE,
DOC_EMAIL VARCHAR(255) NOT NULL UNIQUE,
DOC_PASS nVARCHAR(50) NOT NULL,
DOC_GENDER VARCHAR(7) NOT NULL,
DOC_ADDRESS VARCHAR(100) NOT NULL,
DOC_Role_ID int  NOT NULL foreign key references DoctorRoles(ID),
PricePerAppointment int not null,
PRIMARY KEY (ID)
)

CREATE TABLE EMPLOYEE(
ID INT IDENTITY(1,1) NOT NULL,
EMP_ID AS('EID'+RIGHT('-000000'+CAST(ID AS VARCHAR(10)),10))PERSISTED,
EMP_NAME VARCHAR(50) NOT NULL,
EMP_GENDER VARCHAR(7) NOT NULL,
EMP_PASS nVARCHAR(50) NOT NULL,
DepartmentID int  NOT NULL foreign key references Department(ID),
EMP_TEL VARCHAR(15) NOT NULL UNIQUE,
EMP_EMAIL VARCHAR(255) NOT NULL UNIQUE,
EMP_ADDRESS VARCHAR(100) NOT NULL,
RoleID int  NOT NULL foreign key references EmployeeRoles(ID),
PRIMARY KEY (ID),
)
CREATE TABLE ROOM(
ID INT IDENTITY(1,1) NOT NULL primary key,
ROOM_NO VARCHAR(10) NOT NULL UNIQUE,
FLOOR_NO VARCHAR(1) NOT NULL,
ROOM_STATUS VARCHAR(10) NOT NULL,
ROOM_TYPE VARCHAR(10) NOT NULL,
PRICE_PER_DAY INT NOT NULL,
)
CREATE TABLE PATIENTS(
ID INT IDENTITY(1,1) NOT NULL,
PAT_ID AS('PID'+RIGHT('-000000'+CAST(ID AS VARCHAR(7)),7))PERSISTED,
PAT_NAME VARCHAR(50) NOT NULL,
PAT_TEL VARCHAR(15) NOT NULL UNIQUE,
PAT_EMAIL NVARCHAR(255) NOT NULL UNIQUE,
PAT_GENDER VARCHAR(7) NOT NULL,
PAT_ADDRESS VARCHAR(100) NOT NULL,
Createdby INT FOREIGN KEY REFERENCES Employee(ID),
PAT_DATE date not null,
PRIMARY KEY (ID),
)



CREATE TABLE INPATIENT(
ID INT IDENTITY(1,1) ,
INPAT_ID AS('IPID'+RIGHT('-000000'+CAST(ID AS VARCHAR(10)),10))PERSISTED,
DATE_OF_AD DATE NOT NULL,
DATE_OF_DIS DATE NOT NULL,
PAT_CODE INT FOREIGN KEY REFERENCES PATIENTS(ID),
ROOM_CODE INT FOREIGN KEY REFERENCES ROOM(ID),
TotalAmount int not null,
PRIMARY KEY (ID),
)



CREATE TABLE APPOINTMENT
(
ID INT IDENTITY(1,1) NOT NULL,
AID AS('AID'+RIGHT('-000000'+CAST(ID AS VARCHAR(20)),20))PERSISTED,
CHECKUP_DATE DATE NOT NULL,
Slot_ID int foreign key references timeSlots(id),
PAT_CODE INT FOREIGN KEY REFERENCES PATIENTS(ID),
DOC_CODE INT FOREIGN KEY REFERENCES DOCTORS(ID),
PRIMARY KEY (ID),
)


create table timeSlots(
id int primary key identity(1,1),
availabilityId int ,
slotstart time not null,
slotend time not null,
slotdocid int foreign key references DOCTORS(ID),
isavailable int,
dateoftimeslot date,
)

create table DoctorRoles
(
ID INT primary key IDENTITY(1,1) ,
Rolename nvarchar(50)
)
create table EmployeeRoles(
ID INT primary key IDENTITY(1,1),
RoleName nvarchar(50)
)

Create table Department
(
ID INT primary key IDENTITY(1,1) ,
DepartmentName nvarchar(50)
)


CREATE PROCEDURE sp_InsertDoctor
    @DOC_NAME VARCHAR(50),
    @DOC_DEP_ID INT,
    @DOC_TEL VARCHAR(15),
    @DOC_EMAIL VARCHAR(255),
    @DOC_PASS NVARCHAR(50),
    @DOC_GENDER VARCHAR(7),
    @DOC_ADDRESS VARCHAR(100),
    @DOC_Role_ID INT,
    @PricePerAppointment INT
AS
BEGIN
    INSERT INTO DOCTORS (DOC_NAME, DOC_DEP_ID, DOC_TEL, DOC_EMAIL, DOC_PASS, DOC_GENDER, DOC_ADDRESS, DOC_Role_ID, PricePerAppointment)
    VALUES (@DOC_NAME, @DOC_DEP_ID, @DOC_TEL, @DOC_EMAIL, @DOC_PASS, @DOC_GENDER, @DOC_ADDRESS, @DOC_Role_ID, @PricePerAppointment)
END

CREATE PROCEDURE sp_UpdateDoctor
    @DOC_ID INT,
    @DOC_NAME VARCHAR(50),
    @DOC_DEP_ID INT,
    @DOC_TEL VARCHAR(15),
    @DOC_EMAIL VARCHAR(255),
    @DOC_PASS NVARCHAR(50),
    @DOC_GENDER VARCHAR(7),
    @DOC_ADDRESS VARCHAR(100),
    @DOC_Role_ID INT,
    @PricePerAppointment INT
AS
BEGIN
    UPDATE DOCTORS
    SET DOC_NAME = @DOC_NAME,
        DOC_DEP_ID = @DOC_DEP_ID,
        DOC_TEL = @DOC_TEL,
        DOC_EMAIL = @DOC_EMAIL,
        DOC_PASS = @DOC_PASS,
        DOC_GENDER = @DOC_GENDER,
        DOC_ADDRESS = @DOC_ADDRESS,
        DOC_Role_ID = @DOC_Role_ID,
        PricePerAppointment = @PricePerAppointment
    WHERE ID = @DOC_ID
END


CREATE PROCEDURE sp_DeleteDoctor
    @DOC_ID INT
AS
BEGIN
    DELETE FROM DOCTORS
    WHERE ID = @DOC_ID
END


CREATE PROCEDURE sp_GetDoctors
AS
BEGIN
    SELECT * FROM DOCTORS
END

Create PROCEDURE sp_selecDoctors	
AS
BEGIN
   SELECT * From DOCTORS     
END




CREATE PROCEDURE sp_InsertEmployee
    @EMP_NAME VARCHAR(50),
    @EMP_GENDER VARCHAR(7),
    @EMP_PASS NVARCHAR(50),
    @DepartmentID INT,
    @EMP_TEL VARCHAR(15),
    @EMP_EMAIL VARCHAR(255),
    @EMP_ADDRESS VARCHAR(100),
    @RoleID INT
AS
BEGIN
    INSERT INTO EMPLOYEE (EMP_NAME, EMP_GENDER, EMP_PASS, DepartmentID, EMP_TEL, EMP_EMAIL, EMP_ADDRESS, RoleID)
    VALUES (@EMP_NAME, @EMP_GENDER, @EMP_PASS, @DepartmentID, @EMP_TEL, @EMP_EMAIL, @EMP_ADDRESS, @RoleID)
END


CREATE PROCEDURE sp_UpdateEmployee
    @EMP_ID INT,
    @EMP_NAME VARCHAR(50),
    @EMP_GENDER VARCHAR(7),
    @EMP_PASS NVARCHAR(50),
    @DepartmentID INT,
    @EMP_TEL VARCHAR(15),
    @EMP_EMAIL VARCHAR(255),
    @EMP_ADDRESS VARCHAR(100),
    @RoleID INT
AS
BEGIN
    UPDATE EMPLOYEE
    SET EMP_NAME = @EMP_NAME,
        EMP_GENDER = @EMP_GENDER,
        EMP_PASS = @EMP_PASS,
        DepartmentID = @DepartmentID,
        EMP_TEL = @EMP_TEL,
        EMP_EMAIL = @EMP_EMAIL,
        EMP_ADDRESS = @EMP_ADDRESS,
        RoleID = @RoleID
    WHERE ID = @EMP_ID
END


CREATE PROCEDURE DeleteEmployee
    @EMP_ID INT
AS
BEGIN
    DELETE FROM EMPLOYEE
    WHERE ID = @EMP_ID
END


CREATE PROCEDURE GetEmployees
AS
BEGIN
    SELECT * FROM EMPLOYEE
END

Create PROCEDURE sp_SelectEmployee	
AS
BEGIN
   SELECT * From EMPLOYEE      
END



CREATE PROCEDURE sp_InsertPatient
    @PAT_NAME VARCHAR(50),
    @PAT_TEL VARCHAR(15),
    @PAT_EMAIL NVARCHAR(255),
    @PAT_GENDER VARCHAR(7),
    @PAT_ADDRESS VARCHAR(100),
    @Createdby INT,
    @PAT_DATE DATE
AS
BEGIN
    INSERT INTO PATIENTS (PAT_NAME, PAT_TEL, PAT_EMAIL, PAT_GENDER, PAT_ADDRESS, Createdby, PAT_DATE)
    VALUES (@PAT_NAME, @PAT_TEL, @PAT_EMAIL, @PAT_GENDER, @PAT_ADDRESS, @Createdby, @PAT_DATE)
END


CREATE PROCEDURE sp_UpdatePatient
    @PAT_ID INT,
    @PAT_NAME VARCHAR(50),
    @PAT_TEL VARCHAR(15),
    @PAT_EMAIL NVARCHAR(255),
    @PAT_GENDER VARCHAR(7),
    @PAT_ADDRESS VARCHAR(100),
    @Createdby INT,
    @PAT_DATE DATE
AS
BEGIN
    UPDATE PATIENTS
    SET PAT_NAME = @PAT_NAME,
        PAT_TEL = @PAT_TEL,
        PAT_EMAIL = @PAT_EMAIL,
        PAT_GENDER = @PAT_GENDER,
        PAT_ADDRESS = @PAT_ADDRESS,
        Createdby = @Createdby,
        PAT_DATE = @PAT_DATE
    WHERE ID = @PAT_ID
END


CREATE PROCEDURE sp_DeletePatient
    @PAT_ID INT
AS
BEGIN
    DELETE FROM PATIENTS
    WHERE ID = @PAT_ID
END


CREATE PROCEDURE sp_GetPatients
AS
BEGIN
    SELECT * FROM PATIENTS
END

Create PROCEDURE sp_SelectPaitents
AS
BEGIN
   SELECT * From PATIENTS    
END

CREATE PROCEDURE sp_InsertInpatient
    @DATE_OF_AD DATE,
    @DATE_OF_DIS DATE,
    @PAT_CODE INT,
    @ROOM_CODE INT,
    @TotalAmount INT
AS
BEGIN
    INSERT INTO INPATIENT (DATE_OF_AD, DATE_OF_DIS, PAT_CODE, ROOM_CODE, TotalAmount)
    VALUES (@DATE_OF_AD, @DATE_OF_DIS, @PAT_CODE, @ROOM_CODE, @TotalAmount)
END


CREATE PROCEDURE sp_UpdateInpatient
    @INPAT_ID INT,
    @DATE_OF_AD DATE,
    @DATE_OF_DIS DATE,
    @PAT_CODE INT,
    @ROOM_CODE INT,
    @TotalAmount INT
AS
BEGIN
    UPDATE INPATIENT
    SET DATE_OF_AD = @DATE_OF_AD,
        DATE_OF_DIS = @DATE_OF_DIS,
        PAT_CODE = @PAT_CODE,
        ROOM_CODE = @ROOM_CODE,
        TotalAmount = @TotalAmount
    WHERE ID = @INPAT_ID
END


CREATE PROCEDURE sp_DeleteInpatient
    @INPAT_ID INT
AS
BEGIN
    DELETE FROM INPATIENT
    WHERE ID = @INPAT_ID
END


CREATE PROCEDURE sp_GetInpatients
AS
BEGIN
    SELECT * FROM INPATIENT
END


CREATE PROCEDURE sp_InsertRoom
    @ROOM_NO VARCHAR(10),
    @FLOOR_NO VARCHAR(1),
    @ROOM_STATUS VARCHAR(10),
    @ROOM_TYPE VARCHAR(10),
    @PRICE_PER_DAY INT
AS
BEGIN
    INSERT INTO ROOM (ROOM_NO, FLOOR_NO, ROOM_STATUS, ROOM_TYPE, PRICE_PER_DAY)
    VALUES (@ROOM_NO, @FLOOR_NO, @ROOM_STATUS, @ROOM_TYPE, @PRICE_PER_DAY)
END


CREATE PROCEDURE sp_UpdateRoom
    @ROOM_ID INT,
    @ROOM_NO VARCHAR(10),
    @FLOOR_NO VARCHAR(1),
    @ROOM_STATUS VARCHAR(10),
    @ROOM_TYPE VARCHAR(10),
    @PRICE_PER_DAY INT
AS
BEGIN
    UPDATE ROOM
    SET ROOM_NO = @ROOM_NO,
        FLOOR_NO = @FLOOR_NO,
        ROOM_STATUS = @ROOM_STATUS,
        ROOM_TYPE = @ROOM_TYPE,
        PRICE_PER_DAY = @PRICE_PER_DAY
    WHERE ID = @ROOM_ID
END


CREATE PROCEDURE sp_DeleteRoom
    @ROOM_ID INT
AS
BEGIN
    DELETE FROM ROOM
    WHERE ID = @ROOM_ID
END


CREATE PROCEDURE sp_GetRooms
AS
BEGIN
    SELECT * FROM ROOM
END



Create PROCEDURE sp_SelectRoom
AS
BEGIN
   SELECT * From ROOM  
END


CREATE PROCEDURE sp_InsertAppointment
    @CHECKUP_DATE DATE,
    @SLOT_ID INT,
    @PAT_CODE INT,
    @DOC_CODE INT
AS
BEGIN
    INSERT INTO APPOINTMENT (CHECKUP_DATE, Slot_ID, PAT_CODE, DOC_CODE)
    VALUES (@CHECKUP_DATE, @SLOT_ID, @PAT_CODE, @DOC_CODE)
END


CREATE PROCEDURE sp_UpdateAppointment
    @APPOINTMENT_ID INT,
    @CHECKUP_DATE DATE,
    @SLOT_ID INT,
    @PAT_CODE INT,
    @DOC_CODE INT
AS
BEGIN
    UPDATE APPOINTMENT
    SET CHECKUP_DATE = @CHECKUP_DATE,
        Slot_ID = @SLOT_ID,
        PAT_CODE = @PAT_CODE,
        DOC_CODE = @DOC_CODE
    WHERE ID = @APPOINTMENT_ID
END


CREATE PROCEDURE sp_DeleteAppointment
    @APPOINTMENT_ID INT
AS
BEGIN
    DELETE FROM APPOINTMENT
    WHERE ID = @APPOINTMENT_ID
END


CREATE PROCEDURE GetAppointments
AS
BEGIN
    SELECT * FROM APPOINTMENT
END
